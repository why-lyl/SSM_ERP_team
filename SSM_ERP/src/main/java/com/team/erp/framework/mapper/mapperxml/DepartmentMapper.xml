<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    <!-- namespace命名空间，作用就是对sql进行分类化管理，即sql隔离
       注意：使用mapper代理方法开发的话，namespace就有特殊重要的作用了-->
    <mapper namespace = "com.team.erp.framework.mapper.DepartmentMapper">
	    <resultMap type="com.team.erp.framework.model.Department" id="BaseResultMap">
		    <!--id column 是数据表中主键名，result column 是数据表中属性名 ;
		    jdbcType 是数据表中的数据类型，注意要全部大写 ;property 是实体类名 -->
			<id column="department_id" jdbcType="INTEGER" property="departmentId"/>
		    <result column="department_name" jdbcType="VARCHAR" property="departmentName"/>
		    <result column="department_desc" jdbcType="VARCHAR" property="departmentDesc"/>
		    <result column="authrs" jdbcType="VARCHAR" property="authrs"/>
		</resultMap>
		
	<!-- sql片段的封装，可根据实际情况来改写 -->
	    <sql id="Base_Column_List">
	      	department_id, department_name,department_desc,authrs
	    </sql>
	
	<!-- 根据id查询department -->
	<select id="selectDepartmentByDepartmentId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select 
		<include refid="Base_Column_List" />
		from t_department
		where department_id = #{departmentId,jdbcType=INTEGER}
	</select>
	
	<!-- 根据名字查询department -->
	<select id="selectDepartmentByDepartmentName" parameterType="java.lang.String" resultMap="BaseResultMap">
		select 
		<include refid="Base_Column_List" />
		from t_department
		where department_name= #{departmentName,jdbcType=VARCHAR}
	</select>
	
	<!-- 根据姓名查询department -->
	<select id="selectDepartmentAll" parameterType="java.lang.String" resultMap="BaseResultMap">
		select 
		*
		from t_department
	</select>
	
	<!-- 添加部门1 -->
    <insert id="addDepartment" parameterType="com.team.erp.framework.model.Department" useGeneratedKeys="true" keyProperty="departmentId">
  	    INSERT INTO t_department values (null,#{departmentName},#{departmentDesc},#{authrs})
    </insert>
    
    <!-- 删除部门 -->
    <delete id="deleteDepartmentByDepartmentId" parameterType="java.lang.Integer">
	    delete from t_department
	    where department_id = #{departmentId,jdbcType=INTEGER}
    </delete>
    <!--更新部门1 -->
    <update id="updateByPrimaryKeySelective" parameterType="com.team.erp.framework.model.Department">
	    update t_department
	    <set>
	      <if test="departmentName != null">
	        department_name = #{departmentName,jdbcType=VARCHAR},
	      </if>
	    </set>
	    where department_id = #{departmentId,jdbcType=INTEGER}
  </update>
  <!--更新部门2-->
  <update id="updateByPrimaryKey" parameterType="com.team.erp.framework.model.Department">
	    update t_department
	    set department_name = #{departmentName,jdbcType=VARCHAR},
	    where department_id = #{departmentId,jdbcType=INTEGER}
  </update>
    
    
	</mapper>